# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
#input AMPLIFY { globalAuthRule: AuthRule = { allow: public } }  FOR TESTING ONLY!

type User @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String!
  imageUri: String
  status: String
  chatRoomUser: [ChatRoomUser] @hasMany(indexName: "byUser", fields: ["id"])
}

type ChatRoomUser @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  userID: ID! @index(name: "byUser", sortKeyFields: ["chatRoomID"])
  chatRoomID: ID! @index(name: "byChatRoom", sortKeyFields: ["userID"])
  user: User @hasOne(fields: ["userID"])
  chatRoom: ChatRoom @hasOne(fields: ["chatRoomID"])
}

type ChatRoom @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  chatRoomUsers: [ChatRoomUser]
    @hasMany(indexName: "byChatRoom", fields: ["id"])
  #list of messages
  messages: [Message] @hasMany(indexName: "byChatRoom", fields: ["id"])n
  lastMessageID: ID
  lastMessage: Message @hasOne(fields: ["lastMessageID"])
}

type Message @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  createdAt: String!
  content: String!
  userID: ID!
  chatRoomID: ID!
    @index(
      name: "byChatRoom"
      sortKeyFields: ["createdAt"]
      queryField: "messagesByChatRoom"
    )
  user: User @hasOne(fields: ["userID"])
  chatRoom: ChatRoom @hasOne(fields: ["chatRoomID"])
}
